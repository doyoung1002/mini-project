{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mjmjp\\\\OneDrive\\\\maindesktop\\\\hanghae99\\\\react\\\\mini-project-1\\\\src\\\\common\\\\join.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { styled } from \"styled-components\";\nimport { Form, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Joins = styled.div`\n  width: 1440px;\n  height: 60%;\n  margin: 0 auto;\n  .membersJoin {\n    display: flex;\n    height: 100%;\n  }\n  .login {\n    height: 420px;\n    width: 50%;\n    background: #090909;\n    border: 2px solid #ff0090;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  .login > h4 {\n    color: #ffffff;\n    font-size: 25px;\n    text-align: center;\n  }\n  .membersJoin > form {\n    display: flex;\n    flex-direction: column;\n  }\n  .joinForm {\n    display: flex;\n    justify-content: column;\n  }\n  .joinForm > .id {\n    display: flex;\n  }\n  .joinForm > .id > input {\n    width: 300px;\n  }\n`;\n_c = Joins;\nconst Join = () => {\n  _s();\n  const [id, setId] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [nickname, setNickname] = useState(\"\");\n  const [isIdDuplicated, setIsIdDuplicated] = useState(false);\n  const [isNicknameDuplicated, setIsNicknameDuplicated] = useState(false);\n  const [login, setLogin] = useState(false);\n  const navigate = useNavigate();\n  const loginHandler = () => {\n    axios.post(\"http://3.38.191.164/\", {});\n  };\n  const membersJoin = () => {\n    alert(\"회원가입이 완료되었습니다\");\n    navigate(\"/login\");\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (isIdDuplicated || isNicknameDuplicated) {\n      alert(\"중복된 아이디 또는 별명입니다.\");\n    } else {\n      membersJoin();\n    }\n  };\n  const handleIdCheck = async () => {\n    try {\n      const response = await axios.get(`/api/checkIdDuplicate?id=${id}`);\n      const isDuplicate = response.data.isDuplicate;\n      setIsIdDuplicated(isDuplicate);\n      if (isDuplicate) {\n        alert(\"중복된 아이디입니다.\");\n      }\n    } catch (error) {\n      console.error(\"아이디중복이 확인되지 않습니다:\", error);\n    }\n  };\n  const handleNicknameCheck = async () => {\n    try {\n      const response = await axios.get(`/api/checkNicknameDuplicate?nickname=${nickname}`);\n      const isDuplicate = response.data.isDuplicate;\n      setIsNicknameDuplicated(isDuplicate);\n      if (isDuplicate) {\n        alert(\"중복된 별명입니다.\");\n      }\n    } catch (error) {\n      console.error(\"별명중복이 확인되지 않습니다:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Joins, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"membersJoin\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"O.H.S\\uC5D0 \\uC624\\uC2E0 \\uAC78 \\uD658\\uC601\\uD569\\uB2C8\\uB2E4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onsubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"joinForm\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"id\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"\\uC544\\uC774\\uB514\",\n              value: id,\n              onChange: e => setId(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleIdCheck,\n              children: \"\\uC911\\uBCF5\\uD655\\uC778\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), isIdDuplicated && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uC911\\uBCF5\\uB41C \\uC544\\uC774\\uB514\\uC785\\uB2C8\\uB2E4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"nickname\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"\\uBCC4\\uBA85\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n              value: nickname,\n              onChange: e => setNickname(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), isNicknameDuplicated && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uC911\\uBCF5\\uB41C \\uBCC4\\uBA85\\uC785\\uB2C8\\uB2E4.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 40\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleNicknameCheck,\n              children: \"\\uC911\\uBCF5\\uD655\\uC778\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"\\uBE44\\uBC88\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: loginHandler,\n          children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(Join, \"upqc9jRl3ZQ6VpCTsu0Brv0/Ng4=\", false, function () {\n  return [useNavigate];\n});\n_c2 = Join;\nexport default Join;\nvar _c, _c2;\n$RefreshReg$(_c, \"Joins\");\n$RefreshReg$(_c2, \"Join\");","map":{"version":3,"names":["React","useState","axios","styled","Form","useNavigate","jsxDEV","_jsxDEV","Joins","div","_c","Join","_s","id","setId","password","setPassword","nickname","setNickname","isIdDuplicated","setIsIdDuplicated","isNicknameDuplicated","setIsNicknameDuplicated","login","setLogin","navigate","loginHandler","post","membersJoin","alert","handleSubmit","e","preventDefault","handleIdCheck","response","get","isDuplicate","data","error","console","handleNicknameCheck","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onsubmit","type","placeholder","value","onChange","target","onClick","_c2","$RefreshReg$"],"sources":["C:/Users/mjmjp/OneDrive/maindesktop/hanghae99/react/mini-project-1/src/common/join.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { styled } from \"styled-components\";\r\nimport { Form, useNavigate } from \"react-router-dom\";\r\n\r\nconst Joins = styled.div`\r\n  width: 1440px;\r\n  height: 60%;\r\n  margin: 0 auto;\r\n  .membersJoin {\r\n    display: flex;\r\n    height: 100%;\r\n  }\r\n  .login {\r\n    height: 420px;\r\n    width: 50%;\r\n    background: #090909;\r\n    border: 2px solid #ff0090;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n  .login > h4 {\r\n    color: #ffffff;\r\n    font-size: 25px;\r\n    text-align: center;\r\n  }\r\n  .membersJoin > form {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  .joinForm {\r\n    display: flex;\r\n    justify-content: column;\r\n  }\r\n  .joinForm > .id {\r\n    display: flex;\r\n  }\r\n  .joinForm > .id > input {\r\n    width: 300px;\r\n  }\r\n`;\r\n\r\nconst Join = () => {\r\n  const [id, setId] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [nickname, setNickname] = useState(\"\");\r\n  const [isIdDuplicated, setIsIdDuplicated] = useState(false);\r\n  const [isNicknameDuplicated, setIsNicknameDuplicated] = useState(false);\r\n  const [login, setLogin] = useState(false);\r\n  const navigate = useNavigate();\r\n  const loginHandler = () => {\r\n    axios.post(\"http://3.38.191.164/\", {});\r\n  };\r\n\r\n  const membersJoin = () => {\r\n    alert(\"회원가입이 완료되었습니다\");\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (isIdDuplicated || isNicknameDuplicated) {\r\n      alert(\"중복된 아이디 또는 별명입니다.\");\r\n    } else {\r\n      membersJoin();\r\n    }\r\n  };\r\n\r\n  const handleIdCheck = async () => {\r\n    try {\r\n      const response = await axios.get(`/api/checkIdDuplicate?id=${id}`);\r\n      const isDuplicate = response.data.isDuplicate;\r\n      setIsIdDuplicated(isDuplicate);\r\n      if (isDuplicate) {\r\n        alert(\"중복된 아이디입니다.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"아이디중복이 확인되지 않습니다:\", error);\r\n    }\r\n  };\r\n\r\n  const handleNicknameCheck = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `/api/checkNicknameDuplicate?nickname=${nickname}`\r\n      );\r\n      const isDuplicate = response.data.isDuplicate;\r\n      setIsNicknameDuplicated(isDuplicate);\r\n      if (isDuplicate) {\r\n        alert(\"중복된 별명입니다.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"별명중복이 확인되지 않습니다:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Joins>\r\n      <div className='membersJoin'>\r\n        <div className='login'>\r\n          <h4>O.H.S에 오신 걸 환영합니다</h4>\r\n        </div>\r\n        <form onsubmit={handleSubmit}>\r\n          <div className='joinForm'>\r\n            <div className='id'>\r\n              <input\r\n                type='text'\r\n                placeholder='아이디'\r\n                value={id}\r\n                onChange={(e) => setId(e.target.value)}\r\n              />\r\n              <button onClick={handleIdCheck}>중복확인</button>\r\n            </div>\r\n            {isIdDuplicated && <span>중복된 아이디입니다.</span>}\r\n            <div className='nickname'>\r\n              <input\r\n                type='text'\r\n                placeholder='별명을 입력하세요'\r\n                value={nickname}\r\n                onChange={(e) => setNickname(e.target.value)}\r\n              />\r\n              {isNicknameDuplicated && <span>중복된 별명입니다.</span>}\r\n              <button onClick={handleNicknameCheck}>중복확인</button>\r\n            </div>\r\n            <input\r\n              type='password'\r\n              placeholder='비번'\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </div>\r\n          <button onClick={loginHandler}>회원가입</button>\r\n        </form>\r\n      </div>\r\n    </Joins>\r\n  );\r\n};\r\n\r\nexport default Join;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}