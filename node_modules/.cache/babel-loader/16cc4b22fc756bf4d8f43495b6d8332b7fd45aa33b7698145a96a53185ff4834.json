{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mjmjp\\\\OneDrive\\\\maindesktop\\\\hanghae99\\\\react\\\\mini-project-1\\\\src\\\\components\\\\Form\\\\CommentForm.jsx\",\n  _s = $RefreshSig$();\nimport { DetailComment } from \"./style\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentForm = ({\n  onConfirm\n}) => {\n  _s();\n  const [nickname, setNickname] = useState(\"\");\n  const [comment, setComment] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [comments, setComments] = useState([]);\n  const [confirm, setConfirm] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const {\n    itemId\n  } = useParams();\n  useEffect(() => {\n    fetchComments();\n  }, [itemId]);\n  const fetchComments = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`https://honeyitem.shop/api/items/${itemId}/comments`);\n      setLoading(false);\n      setComments(response.data.comments);\n      console.log(response.data.comments);\n    } catch (error) {\n      console.error(\"Error fetching comments:\", error);\n    }\n  };\n  const handleNicknameChange = event => {\n    if (event.target.value.trim().length > 15) {\n      return;\n    }\n    setNickname(event.target.value);\n  };\n  const handleCommentChange = event => {\n    if (event.target.value.trim().length > 50) {\n      return;\n    }\n    setComment(event.target.value);\n  };\n  const handlePasswordChange = event => {\n    if (event.target.value.trim().length > 15) {\n      return;\n    }\n    setPassword(event.target.value);\n  };\n  const handlePasswordConfirm = event => {\n    if (event.target.value.trim().length > 15) {\n      return;\n    }\n    setConfirm(event.target.value);\n  };\n  const handleButtonClick = async () => {\n    if (!nickname || !comment || !password || !confirm) {\n      alert(\"닉네임과 비밀번호 댓글을 모두 입력해주세요.\");\n      return;\n    }\n    try {\n      const response = await axios.post(`https://honeyitem.shop/api/items/${itemId}/comments`, {\n        nickname: nickname,\n        comment: comment,\n        password: password,\n        confirm: confirm\n      });\n      if (response.status === 200) {\n        onConfirm(response.data);\n        setNickname(\"\");\n        setPassword(\"\");\n        setComment(\"\");\n        setConfirm(\"\");\n        fetchComments();\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DetailComment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"nickName-input\",\n      placeholder: \"\\uB2C9\\uB124\\uC784\",\n      value: nickname,\n      onChange: handleNicknameChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"comment-input\",\n      placeholder: \"\\uB313\\uAE00\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n      value: comment,\n      onChange: handleCommentChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"password-input\",\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n      type: \"password\",\n      value: password,\n      onChange: handlePasswordChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"password-Confirm-input\",\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n      type: \"password\",\n      value: confirm // 수정\n      ,\n      onChange: handlePasswordConfirm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleButtonClick,\n      children: \"\\uD655\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Nickname: \", comment.nickname]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Comment: \", comment.comment]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)]\n    }, comment.commentId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentForm, \"7KXTwgO74DDzWzUzD0qJmyUXVy4=\", false, function () {\n  return [useParams];\n});\n_c = CommentForm;\nexport default CommentForm;\nvar _c;\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"names":["DetailComment","React","useState","useEffect","axios","useParams","jsxDEV","_jsxDEV","CommentForm","onConfirm","_s","nickname","setNickname","comment","setComment","password","setPassword","comments","setComments","confirm","setConfirm","loading","setLoading","itemId","fetchComments","response","get","data","console","log","error","handleNicknameChange","event","target","value","trim","length","handleCommentChange","handlePasswordChange","handlePasswordConfirm","handleButtonClick","alert","post","status","children","id","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","map","commentId","_c","$RefreshReg$"],"sources":["C:/Users/mjmjp/OneDrive/maindesktop/hanghae99/react/mini-project-1/src/components/Form/CommentForm.jsx"],"sourcesContent":["import { DetailComment } from \"./style\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst CommentForm = ({ onConfirm }) => {\r\n  const [nickname, setNickname] = useState(\"\");\r\n  const [comment, setComment] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [comments, setComments] = useState([]);\r\n  const [confirm, setConfirm] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { itemId } = useParams();\r\n\r\n  useEffect(() => {\r\n    fetchComments();\r\n  }, [itemId]);\r\n\r\n  const fetchComments = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.get(\r\n        `https://honeyitem.shop/api/items/${itemId}/comments`\r\n      );\r\n      setLoading(false);\r\n      setComments(response.data.comments);\r\n      console.log(response.data.comments);\r\n    } catch (error) {\r\n      console.error(\"Error fetching comments:\", error);\r\n    }\r\n  };\r\n\r\n  const handleNicknameChange = (event) => {\r\n    if (event.target.value.trim().length > 15) {\r\n      return;\r\n    }\r\n    setNickname(event.target.value);\r\n  };\r\n\r\n  const handleCommentChange = (event) => {\r\n    if (event.target.value.trim().length > 50) {\r\n      return;\r\n    }\r\n    setComment(event.target.value);\r\n  };\r\n\r\n  const handlePasswordChange = (event) => {\r\n    if (event.target.value.trim().length > 15) {\r\n      return;\r\n    }\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  const handlePasswordConfirm = (event) => {\r\n    if (event.target.value.trim().length > 15) {\r\n      return;\r\n    }\r\n    setConfirm(event.target.value);\r\n  };\r\n\r\n  const handleButtonClick = async () => {\r\n    if (!nickname || !comment || !password || !confirm) {\r\n      alert(\"닉네임과 비밀번호 댓글을 모두 입력해주세요.\");\r\n      return;\r\n    }\r\n    try {\r\n      const response = await axios.post(\r\n        `https://honeyitem.shop/api/items/${itemId}/comments`,\r\n        {\r\n          nickname: nickname,\r\n          comment: comment,\r\n          password: password,\r\n          confirm: confirm,\r\n        }\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        onConfirm(response.data);\r\n        setNickname(\"\");\r\n        setPassword(\"\");\r\n        setComment(\"\");\r\n        setConfirm(\"\");\r\n        fetchComments();\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <DetailComment>\r\n      <input\r\n        id='nickName-input'\r\n        placeholder='닉네임'\r\n        value={nickname}\r\n        onChange={handleNicknameChange}\r\n      />\r\n      <input\r\n        id='comment-input'\r\n        placeholder='댓글을 입력하세요'\r\n        value={comment}\r\n        onChange={handleCommentChange}\r\n      />\r\n      <input\r\n        id='password-input'\r\n        placeholder='비밀번호'\r\n        type='password'\r\n        value={password}\r\n        onChange={handlePasswordChange}\r\n      />\r\n\r\n      <input\r\n        id='password-Confirm-input'\r\n        placeholder='비밀번호 확인'\r\n        type='password'\r\n        value={confirm} // 수정\r\n        onChange={handlePasswordConfirm}\r\n      />\r\n\r\n      <button onClick={handleButtonClick}>확인</button>\r\n\r\n      {/* Comment List */}\r\n      {comments.map((comment) => (\r\n        <div key={comment.commentId}>\r\n          <p>Nickname: {comment.nickname}</p>\r\n          <p>Comment: {comment.comment}</p>\r\n        </div>\r\n      ))}\r\n    </DetailComment>\r\n  );\r\n};\r\n\r\nexport default CommentForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}