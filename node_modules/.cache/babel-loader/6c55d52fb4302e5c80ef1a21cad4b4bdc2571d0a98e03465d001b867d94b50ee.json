{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mjmjp\\\\OneDrive\\\\maindesktop\\\\hanghae99\\\\react\\\\mini-project-1\\\\src\\\\components\\\\Form\\\\CommentForm.jsx\";\nimport React from \"react\";\n// import React, {useState, useCallback} from \"react\";\n// import axios from \"axios\";\nimport { DetailComment } from \"./style\";\n// import { useMutation, apiSlice } from \"../../api/commentsApiSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentForm = ({\n  onConfirm\n}) => {\n  // const [nickname, setNickname] = useState(\"\");\n  // const [comment, setComment] = useState(\"\");\n  // const [password, setPassword] = useState(\"\");\n\n  // const handleNicknameChange = (event) => {\n  //   setNickname(event.target.value);\n  // };\n\n  // const handleCommentChange = (event) => {\n  //   setComment(event.target.value);\n  // };\n\n  // const handlePasswordChange = (event) => {\n  //   setPassword(event.target.value);\n  // };\n\n  // const handleButtonClick = async () => {\n  //   if (!nickname || !comment || !password) {\n  //     alert(\"닉네임과 비밀번호 댓글을 모두 입력해주세요.\");\n  //     return;\n  //   }\n\n  //   try {\n  //     const response = await axios.post(\"your-server-url/comments\", {\n  //       user: nickname,\n  //       pw: password,\n  //       content: comment,\n  //       date: new Date().toISOString(),\n  //     });\n\n  //     if (response.status === 200) {\n  //       onConfirm(response.data);\n  //       setNickname(\"\");\n  //       setPassword(\"\");\n  //       setComment(\"\");\n  //     }\n  //   } catch (error) {\n  //     console.error(error);\n  //   }\n  // };\n  // ------------------------------------리액트 쿼리 ------------------------------------\n  // const CommentForm = () => {\n  //   const [postComment, { isLoading }] = useMutation(apiSlice.endpoints.postComment);\n\n  //   const [nickname, setNickname] = React.useState(\"\");\n  //   const [password, setPassword] = React.useState(\"\");\n  //   const [comment, setComment] = React.useState(\"\");\n\n  //   const handleButtonClick = () => {\n  //     if (!nickname || !password || !comment) {\n  //       alert(\"닉네임과 비밀번호 댓글을 모두 입력해주세요.\");\n  //       return;\n  //     }\n\n  //     postComment({ nickname, password, comment })\n  //       .unwrap()\n  //       .then((payload) => {\n  //         setNickname(\"\");\n  //         setPassword(\"\");\n  //         setComment(\"\");\n  //       })\n  //       .catch((error) => console.error(error));\n  //   };\n\n  return /*#__PURE__*/_jsxDEV(DetailComment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"nickName-input\",\n      placeholder: \"\\uB2C9\\uB124\\uC784\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"password-input\",\n      type: \"password\",\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"comment-input\",\n      placeholder: \"\\uB313\\uAE00\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onConfirm,\n      children: \"\\uD655\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_c = CommentForm;\nexport default CommentForm;\nvar _c;\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"names":["React","DetailComment","jsxDEV","_jsxDEV","CommentForm","onConfirm","children","id","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mjmjp/OneDrive/maindesktop/hanghae99/react/mini-project-1/src/components/Form/CommentForm.jsx"],"sourcesContent":["import React from \"react\";\r\n// import React, {useState, useCallback} from \"react\";\r\n// import axios from \"axios\";\r\nimport { DetailComment } from \"./style\";\r\n// import { useMutation, apiSlice } from \"../../api/commentsApiSlice\";\r\n\r\nconst CommentForm = ({ onConfirm }) => {\r\n  // const [nickname, setNickname] = useState(\"\");\r\n  // const [comment, setComment] = useState(\"\");\r\n  // const [password, setPassword] = useState(\"\");\r\n\r\n  // const handleNicknameChange = (event) => {\r\n  //   setNickname(event.target.value);\r\n  // };\r\n\r\n  // const handleCommentChange = (event) => {\r\n  //   setComment(event.target.value);\r\n  // };\r\n\r\n  // const handlePasswordChange = (event) => {\r\n  //   setPassword(event.target.value);\r\n  // };\r\n\r\n  // const handleButtonClick = async () => {\r\n  //   if (!nickname || !comment || !password) {\r\n  //     alert(\"닉네임과 비밀번호 댓글을 모두 입력해주세요.\");\r\n  //     return;\r\n  //   }\r\n\r\n  //   try {\r\n  //     const response = await axios.post(\"your-server-url/comments\", {\r\n  //       user: nickname,\r\n  //       pw: password,\r\n  //       content: comment,\r\n  //       date: new Date().toISOString(),\r\n  //     });\r\n\r\n  //     if (response.status === 200) {\r\n  //       onConfirm(response.data);\r\n  //       setNickname(\"\");\r\n  //       setPassword(\"\");\r\n  //       setComment(\"\");\r\n  //     }\r\n  //   } catch (error) {\r\n  //     console.error(error);\r\n  //   }\r\n  // };\r\n  // ------------------------------------리액트 쿼리 ------------------------------------\r\n  // const CommentForm = () => {\r\n  //   const [postComment, { isLoading }] = useMutation(apiSlice.endpoints.postComment);\r\n\r\n  //   const [nickname, setNickname] = React.useState(\"\");\r\n  //   const [password, setPassword] = React.useState(\"\");\r\n  //   const [comment, setComment] = React.useState(\"\");\r\n\r\n  //   const handleButtonClick = () => {\r\n  //     if (!nickname || !password || !comment) {\r\n  //       alert(\"닉네임과 비밀번호 댓글을 모두 입력해주세요.\");\r\n  //       return;\r\n  //     }\r\n\r\n  //     postComment({ nickname, password, comment })\r\n  //       .unwrap()\r\n  //       .then((payload) => {\r\n  //         setNickname(\"\");\r\n  //         setPassword(\"\");\r\n  //         setComment(\"\");\r\n  //       })\r\n  //       .catch((error) => console.error(error));\r\n  //   };\r\n\r\n  return (\r\n    <DetailComment>\r\n      {/* <input\r\n        id=\"nickName-input\"\r\n        placeholder=\"닉네임을 입력하세요\"\r\n        value={nickname}\r\n        onChange={(e) => {\r\n          if (e.target.value.trim().length > 11) {\r\n            return;\r\n          }\r\n          setNickname(e.target.value);\r\n        }}\r\n      />\r\n      <input\r\n        id=\"password-input\"\r\n        placeholder=\"비밀번호를 입력하세요\"\r\n        value={password}\r\n        onChange={(e) => {\r\n          if (e.target.value.trim().length > 15) {\r\n            return;\r\n          }\r\n          setPassword(e.target.value);\r\n        }}\r\n      />\r\n      <input\r\n        id=\"comment-input\"\r\n        placeholder=\"댓글을 입력하세요\"\r\n        value={comment}\r\n\r\n        // 글자수 제한\r\n        onChange={(e) => {\r\n          if (e.target.value.trim().length > 50) {\r\n            return;\r\n          }\r\n          setComment(e.target.value);\r\n        }}\r\n      /> */}\r\n\r\n      <input id=\"nickName-input\" placeholder=\"닉네임\" />\r\n      <input id=\"password-input\" type=\"password\" placeholder=\"비밀번호\" />\r\n      <input id=\"comment-input\" placeholder=\"댓글을 입력하세요\" />\r\n\r\n      <button onClick={onConfirm}>확인</button>\r\n      {/* <button onClick={handleButtonClick} disabled={isLoading}>확인</button> */}\r\n    </DetailComment>\r\n  );\r\n};\r\n\r\nexport default CommentForm;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA;AACA,SAASC,aAAa,QAAQ,SAAS;AACvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EACrC;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACEF,OAAA,CAACF,aAAa;IAAAK,QAAA,gBAqCZH,OAAA;MAAOI,EAAE,EAAC,gBAAgB;MAACC,WAAW,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/CT,OAAA;MAAOI,EAAE,EAAC,gBAAgB;MAACM,IAAI,EAAC,UAAU;MAACL,WAAW,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChET,OAAA;MAAOI,EAAE,EAAC,eAAe;MAACC,WAAW,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEpDT,OAAA;MAAQW,OAAO,EAAET,SAAU;MAAAC,QAAA,EAAC;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE1B,CAAC;AAEpB,CAAC;AAACG,EAAA,GA/GIX,WAAW;AAiHjB,eAAeA,WAAW;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}