{"ast":null,"code":"var _jsxFileName = \"/Users/leedoyoung/mini-project/src/components/comment/Comment.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { CommentListDiv, EditButton, SaveButton } from \"./style\";\n// import { useQuery, useMutation } from \"react-query\";\n// import { apiSlice } from \"../../api/commentsApiSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Comment = ({\n  comments,\n  onDelete,\n  onEdit\n}) => {\n  _s();\n  const [editId, setEditId] = useState(null); // 수정 중인 댓글의 id\n  const [editContent, setEditContent] = useState(\"\"); // 수정 중인 댓글의 내용\n  const [editPassword, setEditPassword] = useState(\"\"); // 수정 시 입력한 비밀번호\n  const [deletePassword, setDeletePassword] = useState(\"\"); // 삭제 시 입력한 비밀번호\n  const [editPasswordError, setEditPasswordError] = useState(false); // 비밀번호 일치 여부 에러\n\n  // // 댓글 목록 가져오기\n  // const { data: comments, isLoading, isError, error } = useQuery(\"comments\", apiSlice.endpoints.getComments);\n\n  // // 댓글 수정 뮤테이션 설정\n  // const updateCommentMutation = useMutation((newComment) => apiSlice.endpoints.updateComment(newComment));\n\n  // 특정 댓글의 수정 버튼 클릭 시 호출되는 함수\n  const handleEditClick = (id, content) => {\n    setEditId(id);\n    setEditContent(content);\n    setEditPassword(\"\");\n    setEditPasswordError(false);\n  };\n\n  // 특정 댓글의 저장 버튼 클릭 시 호출되는 함수입니다.\n  const handleSaveClick = id => {\n    // 비밀번호 확인 로직 추가\n    if (editPassword.trim() !== \"비밀번호\") {\n      alert(\"비밀번호가 일치하지 않습니다\");\n      setEditPasswordError(true);\n      return;\n    }\n    const handleDeleteClick = id => {\n      onDelete(id, deletePassword);\n      setDeletePassword(\"\");\n    };\n\n    // 삭제 할 때 호출되는 함수\n    const handleDelete = id => {\n      if (deletePassword.trim() !== \"\") {\n        onDelete(id, deletePassword);\n      }\n    };\n\n    // 수정된 댓글 저장\n    // updateCommentMutation.mutate({ id, content: editContent });\n    setEditId(null);\n    setEditContent(\"\");\n    setEditPassword(\"\");\n    setEditPasswordError(false);\n  };\n\n  // // 로딩 중인 경우 로딩 표시\n  // if (isLoading) {\n  //   return <div>로딩 중...</div>;\n  // }\n\n  // // 오류 발생한 경우 에러 메시지 표시\n  // if (isError) {\n  //   return <div>오류: {error.message}</div>;\n  // }\n\n  // if (!comments) {\n  //   return null; // 또는 원하는 대체 컨텐츠를 반환할 수 있습니다.\n  // }\n\n  return /*#__PURE__*/_jsxDEV(CommentListDiv, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments\",\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-date\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: comment.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-user\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: comment.user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-content\",\n          children: editId === comment.id ?\n          /*#__PURE__*/\n          // 현재 수정 중인 댓글인 경우\n          _jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"pwBtn\",\n              value: editContent,\n              onChange: e => setEditContent(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              value: editPassword,\n              onChange: e => setEditPassword(e.target.value),\n              placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uC785\\uB825\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: comment.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btnBox\",\n          children: [editId === comment.id ? /*#__PURE__*/_jsxDEV(SaveButton, {\n            onClick: () => handleSaveClick(comment.id),\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this) :\n          /*#__PURE__*/\n          // 수정 중이 아닌 경우\n          _jsxDEV(EditButton, {\n            onClick: () => handleEditClick(comment.id, comment.content),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"comment-delete\",\n            onClick: () => onDelete(comment.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: deletePassword,\n            onChange: e => setDeletePassword(e.target.value),\n            placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uC785\\uB825\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(Comment, \"7qtWa3yNm4bAusTDpEc5XPe2P+Q=\");\n_c = Comment;\nexport default Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["React","useState","CommentListDiv","EditButton","SaveButton","jsxDEV","_jsxDEV","Fragment","_Fragment","Comment","comments","onDelete","onEdit","_s","editId","setEditId","editContent","setEditContent","editPassword","setEditPassword","deletePassword","setDeletePassword","editPasswordError","setEditPasswordError","handleEditClick","id","content","handleSaveClick","trim","alert","handleDeleteClick","handleDelete","children","className","map","comment","date","fileName","_jsxFileName","lineNumber","columnNumber","user","value","onChange","e","target","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/leedoyoung/mini-project/src/components/comment/Comment.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { CommentListDiv, EditButton, SaveButton } from \"./style\";\n// import { useQuery, useMutation } from \"react-query\";\n// import { apiSlice } from \"../../api/commentsApiSlice\";\n\nconst Comment = ({ comments, onDelete, onEdit }) => {\n  const [editId, setEditId] = useState(null); // 수정 중인 댓글의 id\n  const [editContent, setEditContent] = useState(\"\"); // 수정 중인 댓글의 내용\n  const [editPassword, setEditPassword] = useState(\"\"); // 수정 시 입력한 비밀번호\n  const [deletePassword, setDeletePassword] = useState(\"\"); // 삭제 시 입력한 비밀번호\n  const [editPasswordError, setEditPasswordError] = useState(false); // 비밀번호 일치 여부 에러\n\n  // // 댓글 목록 가져오기\n  // const { data: comments, isLoading, isError, error } = useQuery(\"comments\", apiSlice.endpoints.getComments);\n\n  // // 댓글 수정 뮤테이션 설정\n  // const updateCommentMutation = useMutation((newComment) => apiSlice.endpoints.updateComment(newComment));\n\n  // 특정 댓글의 수정 버튼 클릭 시 호출되는 함수\n  const handleEditClick = (id, content) => {\n    setEditId(id);\n    setEditContent(content);\n    setEditPassword(\"\");\n    setEditPasswordError(false);\n  };\n\n  // 특정 댓글의 저장 버튼 클릭 시 호출되는 함수입니다.\n  const handleSaveClick = (id) => {\n    // 비밀번호 확인 로직 추가\n    if (editPassword.trim() !== \"비밀번호\") {\n      alert(\"비밀번호가 일치하지 않습니다\");\n      setEditPasswordError(true);\n      return;\n    }\n\n    const handleDeleteClick = (id) => {\n      onDelete(id, deletePassword);\n      setDeletePassword(\"\");\n    };\n\n    // 삭제 할 때 호출되는 함수\n    const handleDelete = (id) => {\n      if (deletePassword.trim() !== \"\") {\n        onDelete(id, deletePassword);\n      }\n    };\n\n    // 수정된 댓글 저장\n    // updateCommentMutation.mutate({ id, content: editContent });\n    setEditId(null);\n    setEditContent(\"\");\n    setEditPassword(\"\");\n    setEditPasswordError(false);\n  };\n\n  // // 로딩 중인 경우 로딩 표시\n  // if (isLoading) {\n  //   return <div>로딩 중...</div>;\n  // }\n\n  // // 오류 발생한 경우 에러 메시지 표시\n  // if (isError) {\n  //   return <div>오류: {error.message}</div>;\n  // }\n\n  // if (!comments) {\n  //   return null; // 또는 원하는 대체 컨텐츠를 반환할 수 있습니다.\n  // }\n\n  return (\n    <CommentListDiv>\n      <div className=\"comments\">\n        {comments.map((comment) => (\n          <div className=\"comment-box\" key={comment.id}>\n            <div className=\"comment-date\">\n              <p>{comment.date}</p>\n            </div>\n\n            <div className=\"comment-user\">\n              <p>{comment.user}</p>\n            </div>\n\n            <div className=\"comment-content\">\n              {editId === comment.id ? ( // 현재 수정 중인 댓글인 경우\n                <>\n                  <input id=\"pwBtn\" value={editContent} onChange={(e) => setEditContent(e.target.value)} />\n\n                  <input\n                    type=\"password\"\n                    value={editPassword}\n                    onChange={(e) => setEditPassword(e.target.value)}\n                    placeholder=\"비밀번호 입력\"\n                  />\n                </>\n              ) : (\n                <p>{comment.content}</p>\n              )}\n            </div>\n\n            <div className=\"btnBox\">\n              {editId === comment.id ? (\n                <SaveButton onClick={() => handleSaveClick(comment.id)}>Save</SaveButton>\n              ) : (\n                // 수정 중이 아닌 경우\n                <EditButton onClick={() => handleEditClick(comment.id, comment.content)}>Edit</EditButton>\n              )}\n              <button className=\"comment-delete\" onClick={() => onDelete(comment.id)}>\n                Delete\n              </button>\n              <input\n                type=\"password\"\n                value={deletePassword}\n                onChange={(e) => setDeletePassword(e.target.value)}\n                placeholder=\"비밀번호 입력\"\n              />\n            </div>\n          </div>\n        ))}\n      </div>\n    </CommentListDiv>\n  );\n};\n\nexport default Comment;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}